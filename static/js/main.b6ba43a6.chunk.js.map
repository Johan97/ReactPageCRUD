{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","identifier","namedish","category","price","description","data","setData","controlmodaledit","setContolModalEdit","controlmodaledelete","setContolModalDelete","controlmodacreate","setControlModalCreate","selecteddish","setSelectedDish","selected","attribute","a","capturevalue","e","target","name","value","prevState","console","log","Container","class","Button","color","onClick","Table","scope","map","Modal","isOpen","ModalHeader","ModalBody","FormGroup","className","readOnly","type","onChange","ModalFooter","datanew","dish","editdish","filter","length","Promise","resolve","reject","then","res","newrecord","push","alert","catch","err","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b6ba43a6.chunk.js","sourcesContent":["import {useState} from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n//import data from './components/appmain/data';\nimport {Table, Button, Container, Modal, ModalBody, ModalHeader, FormGroup, ModalFooter} from 'reactstrap';\n\nfunction App() {\n\n  //Array dish\n  const arrayperson = [\n    {identifier: 1,namedish:'rice',category:'rice',price: 1500,description: 'rice'}\n    ,{identifier: 2,namedish:'fish',category:'fish',price: 34000,description: 'fish'}\n  ];\n\n\n  //hooks - State \n  const [data, setData] = useState(arrayperson);\n  const [controlmodaledit, setContolModalEdit]  = useState(false);\n  const [controlmodaledelete, setContolModalDelete]  = useState(false);\n  const [controlmodacreate, setControlModalCreate]  = useState(false);\n  const [selecteddish, setSelectedDish] = useState({identifier:'', namedish:'', category:'', price:'', description:''});\n\n  //Show Modal\n  const selected=(attribute, a)=>{\n    setSelectedDish(attribute);\n    (a==='Update')?setContolModalEdit(true):setContolModalDelete(true)\n  }\n\n  //Function show Modal create\n  const openmodalcreate =()=>{\n    setSelectedDish(null);\n    setControlModalCreate(true);\n  }\n\n  //Function capture value input-text\n  const capturevalue=e=>{\n    const{name, value}=e.target;\n    setSelectedDish((prevState) =>({\n      ...prevState,\n      [name]:value\n    }));\n    console.log(selecteddish);\n  }\n\n  //Funtion edit\n  const editdish=()=>{\n    var datanew = data;\n    datanew.map(dish=>{\n      if(dish.identifier===selecteddish.identifier){\n        dish.namedish=selecteddish.namedish;\n        dish.category=selecteddish.category;\n        dish.price=selecteddish.price;\n        dish.description=selecteddish.description;\n      }\n    });\n    setData(datanew);\n    setContolModalEdit(false);\n  }\n\n\n  //Function delete\n  const deletedish=()=>{\n    setData(data.filter(dish=>dish.identifier!==selecteddish.identifier));\n    setContolModalDelete(false);\n  }\n\n\n  //Function create\n  const create=()=>{\n    //Promise\n    let p = new Promise ((resolve, reject) =>{\n      if (capturevalue!=''){\n        resolve(console.log('Promise ok - Functions create'));\n      } else{\n        reject(console.log('Promise No ok - Functions create'));\n      }\n    })\n    p.then(res =>{\n      var newrecord = selecteddish;\n      newrecord.identifier=data[data.length-1].identifier+1;\n      var datanew = data;\n      datanew.push(newrecord);\n      setData(datanew);\n      setControlModalCreate(false);\n      alert('Register Ok ');\n    })\n    .catch(err =>{\n      alert('Field Empty ' + err)\n    })\n\n  }\n\n  return(\n\n    <Container class='container'>\n    <Button color='success' onClick={()=>openmodalcreate()}>Register New Dish</Button>\n    <br/>\n    \n    <Table class='table table-bordered'>\n      <thead class='thead-dark'>\n        <tr>\n        <th scope='col'>Identifier</th>\n        <th scope='col'>Name Dish</th>\n        <th scope='col'>Category</th>  \n        <th scope='col'>Price</th>\n        <th scope='col'>Description</th>\n        <th scope='col'>Actions</th>\n        </tr>\n        </thead>\n\n        <tbody>\n        {data.map(attribute =>(\n            <tr>\n              <td>{attribute.identifier}</td>\n              <td>{attribute.namedish}</td>\n              <td>{attribute.category}</td>\n              <td>{attribute.price}</td>\n              <td>{attribute.description}</td>\n              <td>\n                <Button color='danger' onClick={()=>selected(attribute, 'Update')}>Update Dish</Button>{' '}\n                <Button color='primary' onClick={()=>selected(attribute, 'Delete')}>Delete Dish</Button>{' '}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n        </Table>\n  \n        <Modal isOpen={controlmodaledit}>\n          <ModalHeader>\n            <div><h3>Registry edit</h3></div>\n          </ModalHeader>\n\n          <ModalBody>\n              <FormGroup>\n                  <label>Identifier</label>\n                  <input className='form-control' \n                  readOnly \n                  type='text'\n                  name='identifier'\n                  value={selecteddish&&selecteddish.identifier}\n                  />\n              </FormGroup>\n\n              <FormGroup>\n              <label>Name Dish</label>\n                  <input className='form-control' \n                  type='text'\n                  name='namedish'\n                  value={selecteddish&&selecteddish.namedish}\n                  onChange={capturevalue}\n                  />\n              </FormGroup>\n\n              <FormGroup>\n              <label>Category</label>\n                  <input className='form-control' \n                  type='text'\n                  name='category'\n                  value={selecteddish&&selecteddish.category}\n                  onChange={capturevalue}\n                  />\n              </FormGroup>\n\n              <FormGroup>\n              <label>Price</label>\n                  <input className='form-control' \n                  type='text'\n                  name='price'\n                  value={selecteddish&&selecteddish.price}\n                  onChange={capturevalue}\n                  />\n              </FormGroup>\n\n              <FormGroup>\n              <label>Description</label>\n                  <input className='form-control' \n                  type='text'\n                  name='description'\n                  value={selecteddish&&selecteddish.description}\n                  onChange={capturevalue}\n                  />\n              </FormGroup>\n\n          </ModalBody>\n\n          <ModalFooter>\n          <Button color='success' onClick={()=>editdish()}>Ok</Button>\n            <Button color=\"danger\" onClick={()=>setContolModalEdit(false)}> Cancelar</Button>\n          </ModalFooter>\n        </Modal>\n\n\n        <Modal isOpen={controlmodaledelete}>\n          <ModalHeader>\n          Confirmation: Remove saucer  {selecteddish&&selecteddish.namedish} ?\n          </ModalHeader>\n\n          <ModalFooter>\n          <Button color='success' onClick={()=>deletedish()}>Yes, delete</Button>\n            <Button color=\"danger\" onClick={()=>setContolModalDelete(false)}>Cancel action</Button>\n          </ModalFooter>\n\n        </Modal>\n\n\n        <Modal isOpen={controlmodacreate}>\n          <ModalHeader>\n            <div><h3>Registry create</h3></div>\n          </ModalHeader>\n\n          <ModalBody>\n              <FormGroup>\n                  <label>Identifier</label>\n                  <input className='form-control' \n                  readOnly \n                  type='text'\n                  name='identifier'\n                  value={data[data.length-1].identifier+1}\n                  />\n              </FormGroup>\n\n              <FormGroup>\n              <label>Name Dish</label>\n                  <input className='form-control' \n                  type='text'\n                  name='namedish'\n                  value={selecteddish?selecteddish.namedish:''}\n                  onChange={capturevalue}\n                  />\n              </FormGroup>\n\n              <FormGroup>\n              <label>Category</label>\n                  <input className='form-control' \n                  type='text'\n                  name='category'\n                  value={selecteddish?selecteddish.category:''}\n                  onChange={capturevalue}\n                  />\n              </FormGroup>\n\n              <FormGroup>\n              <label>Price</label>\n                  <input className='form-control' \n                  type='text'\n                  name='price'\n                  value={selecteddish?selecteddish.price:''}\n                  onChange={capturevalue}\n                  />\n              </FormGroup>\n\n              <FormGroup>\n              <label>Description</label>\n                  <input className='form-control' \n                  type='text'\n                  name='description'\n                  value={selecteddish?selecteddish.description:''}\n                  onChange={capturevalue}\n                  />\n              </FormGroup>\n\n          </ModalBody>\n\n          <ModalFooter>\n          <Button color='success' onClick={()=>create()}>Create</Button>\n            <Button color=\"danger\" onClick={()=>setControlModalCreate(false)}> Cancel</Button>\n          </ModalFooter>\n        </Modal>\n        \n    </Container>\n        \n  );\n\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}